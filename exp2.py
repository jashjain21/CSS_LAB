from math import sqrt

def prime_checker(n):
    g_or_not = 0
    if n > 1:
        for i in range(2, int(sqrt(n)) + 1):
            if (n % i == 0):
                g_or_not = 1
                break
        if (g_or_not == 0):
            return True
        else:
            return False
    return False

def diffie_hellman():
    g = int(input('Enter 1st Prime number: '))
    if not prime_checker(g):
        g = int(input("ERR!!! Number not Prime -- Try again: "))

    n = int(input('Enter the 2nd Prime Number : '))
    if not prime_checker(n):
        n = int(input("ERR!!! Number not Prime -- Try again: "))

    x = int(input('\nSecret X(Alice): '))
    y = int(input('Secret Y(Bob): '))
    
    X_alice = int(pow(n,x,g)) 
    X_bob = int(pow(n,y,g))

    print("Value generated by A sent to B is ",X_alice)
    print("Value generated by B sent to A is ",X_bob)

    ka = int(pow(X_bob,x,g))
    kb = int(pow(X_alice,y,g))

    print('\nResults are as follows \nSecret key K1 :',ka)
    print('Secret Key K2 :',kb)

if __name__  == '__main__':
    diffie_hellman()
